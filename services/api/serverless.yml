org: karstene
app: shortrlink
service: shortrlink-api

frameworkVersion: '2'
variablesResolutionMode: 20210326

plugins:
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-domain-manager

package:
  patterns:
    - '!node_modules/**'
    - '!tests/**'

custom:
  prune:
    automatic: true
    number: 5
  pythonRequirements:
    dockerizePip: true  # Because of lxml
    useDownloadCache: false
    useStaticCache: false
  customDomain:
    domainName: '${self:custom.domainName.${sls:stage}}'
    certificateName: '*.shortrlink.com'
    createRoute53Record: true
    endpointType: 'regional'
    apiType: 'http'
  domainName:
    prod: api.shortrlink.com
    dev: api-dev.shortrlink.com

provider:
  name: aws
  lambdaHashingVersion: '20201221'
  eventBridge:
    useCloudFormation: true
  profile: privateGmail
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  httpApi:
    cors: true
    authorizers:
      baseJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.${self:provider.region}.amazonaws.com/${ssm:/shortrLink/${sls:stage}/user_pool_id}
        audience:
          - '${ssm:/shortrLink/${sls:stage}/user_pool_web_client_id}'
  tracing:
    apiGateway: true
    lambda: true
  logs:
    httpApi: true
  environment:
    EVENT_BUS_NAME: '${ssm:/shortrLink/${sls:stage}/eventbus_name}'
    DYNAMODB_TABLE: '${ssm:/shortrLink/${sls:stage}/dynamodb_table_name}'
    STAGE: '${sls:stage}'
    BASE_DOMAIN: 'shortr.link'
    REGION: '${self:provider.region}'
    TIMESTREAM_DB: '${ssm:/shortrLink/${sls:stage}/timestream_db_name}'
    TIMESTREAM_TABLE_NAME: '${ssm:/shortrLink/${sls:stage}/timestream_redirects_table}'
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"
            - "dynamodb:GetItem"
            - "dynamodb:GetRecords"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DescribeTable"
          Resource:
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${ssm:/shortrLink/${sls:stage}/dynamodb_table_name}"
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${ssm:/shortrLink/${sls:stage}/dynamodb_table_name}/*"
        - Effect: "Allow"
          Action:
            - "timestream:Select"
            - "timestream:CancelQuery"
            - "timestream:DescribeTable"
            - "timestream:WriteRecords"
          Resource:
            - 'arn:aws:timestream:${self:provider.region}:*:database/${ssm:/shortrLink/${sls:stage}/timestream_db_name}'
            - 'arn:aws:timestream:${self:provider.region}:*:database/${ssm:/shortrLink/${sls:stage}/timestream_db_name}/*'
        - Effect: "Allow"
          Action:
            - "timestream:DescribeEndpoints"
          Resource:
            - '*'
        - Effect: "Allow"
          Action:
            - "events:PutEvents"
          Resource:
            - 'arn:aws:events:${self:provider.region}:*:event-bus/${ssm:/shortrLink/${sls:stage}/eventbus_name}'

functions:
  createShortenedLink:
    handler: src/handlers/create_link.handler
    events:
      - httpApi:
          authorizer:
            name: baseJwtAuthorizer
          method: POST
          path: '/short-links'
  createShortenedLinkAnon:
    handler: src/handlers/create_link.handler
    events:
      - httpApi:
          method: POST
          path: '/short-links/anonymous'
  listShortenedLinks:
    handler: src/handlers/list_links.handler
    events:
      - httpApi:
          authorizer:
            name: baseJwtAuthorizer
          method: GET
          path: '/short-links'
  getShortenedLinkStats:
    handler: src/handlers/get_link_stats.handler
    events:
      - httpApi:
          authorizer:
            name: baseJwtAuthorizer
          method: GET
          path: '/short-links/{link_id}/stats'
  addLinkInformation:
    handler: src/handlers/add_link_information.handler
    events:
      - eventBridge:
          eventBus: 'arn:aws:events:${self:provider.region}:*:event-bus/${ssm:/shortrLink/${sls:stage}/eventbus_name}'
          maximumRetryAttempts: 1
          pattern:
            source:
              - 'shortrLinks.lambda'
            detail-type:
              - 'shortrLink link created'
  indexRedirectDynamoDb:
    handler: src/handlers/index_redirect_dynamodb.handler
    events:
      - eventBridge:
          eventBus: 'arn:aws:events:${self:provider.region}:*:event-bus/${ssm:/shortrLink/${sls:stage}/eventbus_name}'
          maximumRetryAttempts: 1
          pattern:
            source:
              - 'shortrLinks.lambda'
            detail-type:
              - 'shortrLink user redirect'
  indexRedirectTimeStream:
    handler: src/handlers/index_redirect_timestream.handler
    events:
      - eventBridge:
          eventBus: 'arn:aws:events:${self:provider.region}:*:event-bus/${ssm:/shortrLink/${sls:stage}/eventbus_name}'
          maximumRetryAttempts: 1
          pattern:
            source:
              - 'shortrLinks.lambda'
            detail-type:
              - 'shortrLink user redirect'
